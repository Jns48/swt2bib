/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.swt2bib.ui.panels;

import de.swt2bib.fachlogik.genreverwaltung.Genre;
import de.swt2bib.fachlogik.kategorieverwaltung.Kategorie;
import de.swt2bib.fachlogik.medienverwaltung.Medien;
import de.swt2bib.ui.ElternPanel;
import de.swt2bib.ui.PanelHandler;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;

/**
 *
 * @author root
 */
public class SelectPanel extends ElternPanel {

    private Medien medium;

    /**
     * Creates new form SelectPanel
     */
    public SelectPanel(PanelHandler panelHandler) {
        super(panelHandler);
        initComponents();
        setComboboxKategorie(kategorieComboBox, panelHandler.getKategorieListe());
        setComboboxGenre(genreComboBox, panelHandler.getGenreListe());
        setComboboxDate(dateComboBox);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void statusFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusFieldActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        //TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void sucheFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sucheFieldActionPerformed
        panelHandler.panelUnsichtbar();
        panelHandler.getSuchePanel().setSearchTitel(sucheField.getText());
        panelHandler.getSuchePanel().setVisible(true);
    }//GEN-LAST:event_sucheFieldActionPerformed

    private void bearbeitenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bearbeitenButtonActionPerformed
        String beschreibung = beschreibungField.getText();
        String name = nameField.getText();
        String desc = beschreibungField.getText();

        Kategorie kategorie = null;// kategorieComboBox.getSelectedItem();

        for (int i = 0; i < panelHandler.getKategorieListe().size(); i++) {
            if (panelHandler.getKategorieListe().get(i).getBezeichnung().equals(kategorieComboBox.getSelectedItem())) {
                kategorie = panelHandler.getKategorieListe().get(i);
            }
        }

        Genre genre = null;//genreComboBox.getSelectedItem();

        for (int i = 0; i < panelHandler.getGenreListe().size(); i++) {
            if (panelHandler.getGenreListe().get(i).getBezeichnung().equals(genreComboBox.getSelectedItem())) {
                genre = panelHandler.getGenreListe().get(i);
            }
        }

        Medien m = new Medien(medium.getIsbn(), medium.getBarcodenummer(), genre, kategorie, name, medium.isAusgeliehen(), medium.isVorgemerkt(), medium.getId(), medium.getAnzahl(), medium.getAuthor(), desc);
        panelHandler.saveMediumChange(m);
    }//GEN-LAST:event_bearbeitenButtonActionPerformed

    private void ausleihenVormerkenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ausleihenVormerkenButtonActionPerformed
        if (statusField.getText().equals("ausgeliehen") || statusField.getText().equals("bereits vorgemerkt")) {
            if (statusField.getText().equals("bereits vorgemerkt")) {
            } else {
                medium.setVorgemerkt(true);
                statusField.setText("bereits vorgemerkt");
            }
        } else {
            Date date = new Date(dateComboBox.getSelectedItem().toString()+"");
            medium.berechneVerfuegbare(1);
            panelHandler.createNewAusleihe(medium.getId(), date, medium.getKategorien().getId());
        }
        panelHandler.saveMediumChange(medium);

    }//GEN-LAST:event_ausleihenVormerkenButtonActionPerformed

    private void kategorieComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kategorieComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kategorieComboBoxActionPerformed

    public void setMitarbeiter() {
        bearbeitenButton.setEnabled(true);
        genreComboBox.setEnabled(true);
        kategorieComboBox.setEnabled(true);
        beschreibungField.setEnabled(true);
        nameField.setEnabled(true);
        statusField.setEnabled(true);
    }

    public void setMedium(Medien m) {
        medium = m;
        if (m.isAusgeliehen()) {
            statusField.setText("ausgeliehen");
            if (m.isVorgemerkt()) {
                statusField.setText("bereits vorgemerkt");
            }
        } else {
            statusField.setText("vorhanden");
        }
        beschreibungField.setText("blablalba - in arbeit");
        nameField.setText(m.getName());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ausleihenVormerkenButton;
    private javax.swing.JButton bearbeitenButton;
    private javax.swing.JTextArea beschreibungField;
    private javax.swing.JLabel beschreibungLable;
    private javax.swing.JComboBox<String> dateComboBox;
    private javax.swing.JComboBox<String> genreComboBox;
    private javax.swing.JLabel genreLable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> kategorieComboBox;
    private javax.swing.JLabel kategorieLable;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLable;
    private javax.swing.JTextField statusField;
    private javax.swing.JLabel statusLable;
    private javax.swing.JTextField sucheField;
    // End of variables declaration//GEN-END:variables
	
    private void setComboboxKategorie(JComboBox combobox, List<Kategorie> list) {
        String[] tmp = new String[list.size()];
        for (int i = 0; i < list.size(); i++) {
            tmp[i] = list.get(i).getBezeichnung();
        }
        combobox.setModel(new DefaultComboBoxModel(tmp));
    }

    private void setComboboxGenre(JComboBox combobox, List<Genre> list) {
        String[] tmp = new String[list.size()];
        for (int i = 0; i < list.size(); i++) {
            tmp[i] = list.get(i).getBezeichnung();
        }
        combobox.setModel(new DefaultComboBoxModel(tmp));
    }

    private void setComboboxDate(JComboBox combobox) {
        ArrayList<Date> list = new ArrayList<Date>();
        for(int i = 15; i<=45;i+=15){
            list.add(addDays(i));
        }
        String[] tmp = new String[list.size()];
        for (int i = 0; i < list.size(); i++) {
            DateFormat formatter = new SimpleDateFormat("EEE, dd MMM yyyy", Locale.ENGLISH);//
            String date = formatter.format(list.get(i));
            tmp[i] = date;
        }
        combobox.setModel(new DefaultComboBoxModel(tmp));
    }

    private static Date addDays(int days) {
        Calendar c = new GregorianCalendar();
        c.add(Calendar.DATE, days);
        Date date = c.getTime();
        return date;
    }

}
